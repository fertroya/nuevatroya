{"ts":1360724597541,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"process.env.TZ = 'UTC';\nconst request = require('request');\nconst crypto = require('crypto');\nconst config = require('nconf');\nconst fs = require('fs');\n\nconst logger = require('./logger');\nlogger.debug(new Date().toString());\n\nvar auth = function(callback) {\n\n    config.argv().env().file({\n        file: 'config.json'\n    });\n    config.defaults({\n        keyFile: \"key.pem\",\n        expiresInMinutes: 60\n    });\n    var keyFile = config.get('keyFile');\n    if(!fs.existsSync(keyFile)){\n        logger.error(\"keyFile not found:\"+keyFile);\n        process.exit(1);\n    }\n\n    var jwtHeader = {\n        alg: \"RS256\",\n        typ: \"JWT\"\n    };\n    var jwtHeaderB64 = base64urlEncode(JSON.stringify(jwtHeader));\n    logger.debug(\"Header:\" + jwtHeaderB64);\n    //decode\n    logger.debug(new Buffer(jwtHeaderB64, 'base64').toString('ascii'));\n\n    // https://developers.google.com/google-apps/calendar/v3/reference/calendars/get\n    var iat = Math.floor(new Date().getTime() / 1000);\n    var exp = iat + (config.get('expiresInMinutes') * 60);\n\n    var jwtClaim = config.get('claim');\n    jwtClaim.exp = exp;\n    jwtClaim.iat = iat;\n\n    logger.debug(JSON.stringify(jwtClaim));\n    var jwtClaimB64 = base64urlEncode(JSON.stringify(jwtClaim));\n    logger.debug(\"Claim:\" + jwtClaimB64);\n\n    var signatureInput = jwtHeaderB64 + '.' + jwtClaimB64;\n    logger.debug(\"Signature Input:\" + signatureInput);\n\n    var JWT = null;\n    var signature = sign(signatureInput, keyFile);\n    logger.debug(\"Signature:\" + signature);\n\n    JWT = signatureInput + '.' + signature;\n    logger.debug(\"JWT:\"+JWT);\n\n    request.post({\n        url: 'https://accounts.google.com/o/oauth2/token',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        form: {\n            grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n            assertion: JWT\n        }\n    }, function(err, res, body) {\n        if (err){\n            callback(err, null);\n        }else{\n            if (res.statusCode == 200) {\n                logger.info(\"STATUS:200\");\n                callback(err, JSON.parse(body).access_token);\n            }else{\n                logger.warning('STATUS: ' + res.statusCode);\n                logger.debug('HEADERS: ' + JSON.stringify(res.headers));\n                logger.error('Response:\\n' + body);\n\n                callback(new Error(\"failed to retrieve an access token\"), body);\n            }\n        }\n    });\n\n}\n\nfunction sign(inStr, keyPath) {\n\n    var key = fs.readFileSync(keyPath);\n    if(key.length==0)\n        logger.warning(\"most likely invalid key file: \" + keyPath);\n\n    var sig = crypto.createSign('RSA-SHA256').update(inStr).sign(key, 'base64');\n\n    //verification\n    var verifier = crypto.createVerify(\"RSA-SHA256\");\n    verifier.update(inStr);\n    if(verifier.verify(key, sig, 'base64')){\n        logger.debug(\"signature verified with:\"+keyPath);\n    }else{\n        logger.error(\"signature NOT verified with:\"+keyPath);\n    }\n\n    return base64urlEscape(sig);\n}\n\nfunction base64urlEncode(str) {\n    return base64urlEscape(new Buffer(str).toString('base64'));\n}\n\nfunction base64urlEscape(str) {\n    return str.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\n\nmodule.exports.auth = auth;\n"]],"start1":0,"start2":0,"length1":0,"length2":3254}]],"length":3254}
{"contributors":[],"silentsave":false,"ts":1360724613380,"patch":[[{"diffs":[[0,"uire('./"],[1,"lib."],[0,"logger')"]],"start1":172,"start2":172,"length1":16,"length2":20}]],"length":3258,"saved":false}
{"ts":1360724615240,"patch":[[{"diffs":[[0,"e('./lib"],[-1,"."],[1,"/"],[0,"logger')"]],"start1":175,"start2":175,"length1":17,"length2":17}]],"length":3258,"saved":false}
{"ts":1360724894679,"patch":[[{"diffs":[[0,"utes: 60"],[1,",\n        claim:{\n             \"iss\":\"yourProjectID@developer.gserviceaccount.com\"\n            ,\"scope\":\"https://www.googleapis.com/auth/calendar\"\n            ,\"aud\":\"https://accounts.google.com/o/oauth2/token\"\n         }"],[0,"\n    });"]],"start1":402,"start2":402,"length1":16,"length2":237}]],"length":3479,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360724945371,"patch":[[{"diffs":[[0," file: '"],[1,"oauth-"],[0,"config.j"]],"start1":303,"start2":303,"length1":16,"length2":22}]],"length":3485,"saved":false}
