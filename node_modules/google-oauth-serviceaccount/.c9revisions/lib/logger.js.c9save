{"ts":1360723516993,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var winston = require('winston');\r\n\r\nvar logger = new (winston.Logger)({\r\n  transports: [\r\n    new (winston.transports.Console)({ json: false, colorize: true, timestamp: true, level:\"debug\" })\r\n    //,new winston.transports.File({ filename: __dirname + '/debug.log', json: false })\r\n  ] /*,\r\n  exceptionHandlers: [\r\n    new (winston.transports.Console)({ json: false, colorize: true, timestamp: true })\r\n    //,new winston.transports.File({ filename: __dirname + '/exceptions.log', json: false })\r\n  ] */\r\n  ,exitOnError: false\r\n});\r\n\r\nwinston.addColors({\r\n  debug: 'blue',\r\n  info: 'magenta',\r\n  notice: 'cyan',\r\n  warning: 'yellow',\r\n  error: 'red',\r\n  crit: 'red',\r\n  alert: 'green',\r\n  emerg: 'red'\r\n});\r\nlogger.setLevels(winston.config.syslog.levels);\r\n\r\nmodule.exports = logger;\r\n/*\r\nprocess.on('uncaughtException', function(err) {\r\n    for(var key in err)\r\n        if(key == 'stack')\r\n            console.log('stack' + err[key].join('\\n'));\r\n        else\r\n            console.log(key + '=' + err[key]);\r\n\r\n    console.log(err);\r\n});\r\n*/"]],"start1":0,"start2":0,"length1":0,"length2":1043}]],"length":1043}
{"contributors":[],"silentsave":false,"ts":1360724651900,"patch":[[{"diffs":[[0," level:\""],[-1,"debu"],[1,"warnin"],[0,"g\" })\r\n "]],"start1":175,"start2":175,"length1":20,"length2":22}]],"length":1045,"saved":false}
