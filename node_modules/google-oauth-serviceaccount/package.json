{
  "name": "google-oauth-serviceaccount",
  "version": "0.0.1",
  "author": {
    "name": "tsugaru23",
    "email": "tsugaru23@gmail.com"
  },
  "main": "google-oauth-serviceaccount",
  "dependencies": {
    "crypto": "",
    "nconf": "",
    "request": "",
    "winston": ""
  },
  "config": {
    "keyFile": "key.pem",
    "expiresInMinuteas": 60
  },
  "readmeFilename": "README.md",
  "description": "oauth module to retrive an access token with google service account",
  "repository": {
    "type": "git",
    "url": "https://github.com/tsugaru23/google-oauth-serviceAccount.git"
  },
  "bugs": {
    "url": "https://github.com/tsugaru23/google-oauth-serviceAccount/issues"
  },
  "readme": "google-oauth-serviceaccount\n==========================\nMotivation:\n------------------------\n\nWanted to accesss my personal calendar, NOT the one of Google Apps, and found no good example for node.js with [service account][3] without any interaction.\n\nInstall:\n------------------------\n\n    npm install google-oauth-serviceaccount\n\nPreparation:\n------------------------\n1.  Create your service account and enable calendar access(thanks to [this post][1]):\n<pre>\n>    a) Log in into the Google account you want to use to manage your projects.\n>    b) Go to https://code.google.com/apis/console/\n>    c) Create a project. You will get issued a project number, in our example\n>    we'll use 99999999999.\n>    d) Allow the project to use the calendar API:\n>    -> services (left pane), then find 'calendar api' and set the button 'on'\n>    e) Create a Service Account.\n>    -> API access (left pane); select 'create service account'\n>    Part of the procedure is that you'll get a PKCS#12 bundle, which you can\n>    download and should store on your appserver in a secure location. Your\n>    app should be able to access it, but outsiders should not be allowed to\n>    download it.\n</pre>\n2.  Store the p12 file into pem with openssl(thank [this][2])\n\n    $ openssl pkcs12 -in yourkey.p12 -out yourkey.pem -nodes<br/>\n    type \"notasecret\" for password.\n\n3.  Share the calendar with your developer account\n\n    Calendar \"Settings\" -> \"Share this calendar\", at \"Share with specific people\",\n    put the email address of developer account choosing a permission you want, then \"add person\".\n    The address should be like \"yourProjectId@developer.gserviceaccount.com\".\n\n4.  Edit oahtu-config.json and place key.pem which generated in step 2.\n<pre>\n    {\n     \"keyFile\": \"key.pem\"\n    ,\"expiresInMinuteas\": 60\n    ,\"claim\":{\n    \t \"iss\":\"yourProjectID@developer.gserviceaccount.com\"\n    \t,\"scope\":\"https://www.googleapis.com/auth/calendar\"\n    \t,\"aud\":\"https://accounts.google.com/o/oauth2/token\"\n     }\n    }\n</pre>\n\n5.  Test with test.js.\n\n    if successfull, you'll see an access token:\n    <pre>token:ya29.AHES6ZSfxRWLEv9vfusipvawSS-55oQyMAGxF3kbRGsgGMTo</pre>\n\n6.  Enjoy with [calendar APIs][4]. You may try listEvents.js.\n\n[1]: https://groups.google.com/forum/?fromgroups=#!topic/google-calendar-api/MySzyAXq12Q\n[2]: http://stackoverflow.com/questions/11529595/is-a-service-account-the-right-credentials-for-querying-google-bigquery-in-node\n[3]: https://developers.google.com/accounts/docs/OAuth2ServiceAccount\n[4]: https://developers.google.com/google-apps/calendar/v3/reference\n\nUsage example:\n------------------------\n`````javascript\nconst request = require('request');\nconst gaccount = require('./google-oauth-serviceaccount');\n\nconst calRoot = \"https://www.googleapis.com/calendar/v3\";\n\ngaccount.auth(function(err, access_token){\n\n    var token = \"?access_token=\"+access_token;\n\n    request.get({\n        url:calRoot+\"/users/me/calendarList\"+token,\n        json:true\n        }, function(err, res, body){\n\n            for(var c=0; c<body.items.length; c++){\n                console.log(body.items[c]);\n\n                request.get({\n                    url:calRoot+\"/calendars/\"+body.items[c].id+\"/events\"+token,\n                    json:true\n                    }, function(err, res, cal){\n                        console.log(cal);\n                });\n            }\n    })\n\n});\n`````\n",
  "_id": "google-oauth-serviceaccount@0.0.1",
  "_from": "google-oauth-serviceaccount@"
}
